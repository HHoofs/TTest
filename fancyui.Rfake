# The MIT License (MIT)
# 
# Copyright (c) 2014 Huub
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the 'Software' ), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

shinyUI(fluidPage(
#       tags$head(
#         HTML('<body style="background-color: #00A2DB;">'),
# #         #         tags$style(type = "text/css", "a{color: #f50000;}"),
# #         tags$style(type="text/css", "select { color: #001C3D }"),
# #         tags$style(type="text/css", "textarea { color: #001C3D}"),
# #         tags$style(type="text/css", ".jslider {  color: #001C3D}"),
# #         tags$style(type="text/css", ".jslider .jslider-label{color: #001C3D ; font-size: 12px;}"),
# #         tags$style(type="text/css", ".jslider .jslider-value{color: #001C3D ; font-weight:bold; font-size: 16px;}"),      
# # #         tags$style(type='text/css', ".span4 .well { background-color: white; border-color: #00A2DB}"),
# #         tags$style(type='text/css', "row-fluid .span9 { color: black; }")
# #         tags$style(type='text/css', ".span9  { color: #001C3D; }"),
# # 
# #         tags$style(type='text/css', ".span4  { color: #001C3D; }")
# 
#       ),
                  
                  # Verschillende tabPanels
                  navbarPage(
#                     HTML('<a href="http://www.maastrichtuniversity.nl/" target="_blank"><img src="logo.jpg" alt="Maastricht University"  width="200""/></a>')
                    "HENK",theme = "bootstrap.css",
                             # Hypotheses en waardes 
                             tabPanel("Waardes",
                                      plotOutput("waardes")
                             ),
                             # Kritieke gebied methode met conclusie
                             tabPanel("Kritieke gebied",
                                      fluidRow(column(9,plotOutput("kritiek_plot")),
                                               column(3,plotOutput("kritiek_conc"))
                                      )),
                             # P-Waarde methode met conclusie
                             tabPanel("p-waarde",
                                      fluidRow(column(6,plotOutput("pwaarde_plot")),
                                               column(6,plotOutput("pwaarde_conc"))
                                      )),
                             # Betrouwbaarheids interval methode conclusie
                             tabPanel("Betrouwbaarheids Interval",
                                      fluidRow(column(6,plotOutput("CI_plot")),
                                               column(6,plotOutput("CI_conc"))
                                      )), 
                             # T tabel om te laten zien waar ze moeten kijken
                             tabPanel("T Tabel",
                                      tableOutput("ttable")
                             ),
                             # Version e.d.
                             tabPanel("Version (C)",
                                      fluidRow(column(4,verbatimTextOutput("version")),
                                               column(4,verbatimTextOutput("author")),
                                               column(4,verbatimTextOutput("licence"))
                                      ) 
                             )
                  ),
                  
                  
                  fluidRow(column(3,
                                  # Keuze alpha
                                  selectInput("alpha",strong(HTML("&alpha;:")),c(.01,.05,.1),selected=.05),
                                  # Keuze nulhypothese
                                  radioButtons("sided",strong("Richting Nul Hypothese:"),
                                               list("H0: mu is" = "=",
                                                    "H0: mu kleiner" = "<",
                                                    "H0: mu groter " = ">")
                                  ),
                                  # Opties
                                  wellPanel(checkboxInput("options",strong("Opties"),value=TRUE),
                                            conditionalPanel(condition = paste("input.options == true"),
                                                             # Bereik grafieken
                                                             sliderInput("lim", "Bereik",min=0, max=20, value=5, step=1),
                                                             # Antwoord?
                                                             checkboxInput("conc", "Conclusie",value=FALSE),
                                                             checkboxInput("krit", "p-waarde + kritiek gebied",value=FALSE)
                                            )
                                  )),
                           # Keuze ttest 
                           column(9,
                                  radioButtons("test",strong("Soort test:"),
                                               list("t-toets voor één steekproef" = "onettest",
                                                    "t-toets voor twee steekproeven" = "twottest"
                                               )
                                  ),
                                  # uitewerking testen
                                  # Een sample t-test
                                  conditionalPanel(condition = paste("input.test == 'onettest'"),
                                                   # Populatie gemiddelde
                                                   sliderInput("one_u", "u (populatiegemiddelde)",min=0, max=10, value=7, step=.1),
                                                   # Steekproefgemiddelde
                                                   sliderInput("one_X", "X (steekproefgemiddelde)",min=0, max=10, value=6.9, step=.1,animate=TRUE),
                                                   #                          sliderInput("one_X", "X (steekproefgemiddelde)",min=1, max=10, value=6, step=1,animate=TRUE),
                                                   # Standaard deviatie
                                                   sliderInput("one_sd", "s (standaard deviatie)",min=0, max=12, value=1, step=.1),
                                                   #                          sliderInput("one_sd", "s (standaard deviatie)",min=1, max=12, value=1, step=1),
                                                   # Groepsgrootte
                                                   sliderInput("one_N", "N (steekproefgrootte)",min=0, max=2000, value=42, step=1)
                                                   #                          sliderInput("one_N", "N (steekproefgrootte)",min=1980, max=2000, value=1989, step=1)
                                  ),
                                  # Twee sample t-test
                                  conditionalPanel(condition = paste("input.test == 'twottest'"),
                                                   column(6,
                                                          # Steekproefgemiddelde
                                                          sliderInput("two_X1", "X1 (gemiddelde groep 1)",min=0, max=10, value=6.9, step=.1),
                                                          # Standaard deviatie
                                                          sliderInput("two_sd1", "s1 (standaard deviatie groep 1)",min=0, max=12, value=1, step=.1),
                                                          # Groepsgrootte
                                                          sliderInput("two_N1", "N (steekproefgrootte groep 1)",min=0, max=2000, value=42, step=1)),
                                                   column(6,
                                                          # Steekproefgemiddelde
                                                          sliderInput("two_X2", "X2 (gemiddelde groep 2)",min=0, max=10, value=6.9, step=.1),
                                                          # Standaard deviatie
                                                          sliderInput("two_sd2", "s2 (standaard deviatie groep 2)",min=0, max=12, value=1, step=.1),
                                                          # Groepsgrootte
                                                          sliderInput("two_N2", "N2 (steekproefgrootte groep 2)",min=0, max=2000, value=42, step=1))
                                                   
                                  )
                           )
                  )
))